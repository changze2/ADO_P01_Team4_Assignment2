name: Snowflake SQL Automation Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the main branch
  schedule:
    - cron: "0 1 * * *"  # Run at 1 AM Singapore Time every day

jobs:
  run-sql-scripts:
    runs-on: ubuntu-22.04  # Use a Linux-based runner

    steps:
      - name: Checkout
        uses: actions/checkout@master

      # Download the SnowSQL installer
      - name: Download SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
      # Install SnowSQL
      - name: Install SnowSQL
        run: |
          SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
          echo "export PATH=\$PATH:~/snowflake/snowsql" >> ~/.profile
          source ~/.profile
      # Test the SnowSQL installation by checking the version
      - name: Test installation
        run: |
          source ~/.profile
          ~/snowflake/snowsql -v
      # Debug Snowflake credentials (without printing the password)
      - name: Debug Snowflake credentials
        run: |
          echo "SNOWFLAKE_ACCOUNT: ${SNOWFLAKE_ACCOUNT}"
          echo "SNOWFLAKE_USER: ${SNOWFLAKE_USER}"
          echo "SNOWFLAKE_DATABASE: ${SNOWFLAKE_DATABASE}"
          echo "SNOWFLAKE_WAREHOUSE: ${SNOWFLAKE_WAREHOUSE}"
          echo "SNOWFLAKE_SCHEMA: ${SNOWFLAKE_SCHEMA}"
      # Set up Snowflake credentials using environment variables
      - name: Set up Snowflake credentials
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          echo "[connections.default]" > $HOME/.snowsql/config
          echo "accountname = ${SNOWFLAKE_ACCOUNT}" >> $HOME/.snowsql/config
          echo "username = ${SNOWFLAKE_USER}" >> $HOME/.snowsql/config
          echo "password = ${SNOWFLAKE_PASSWORD}" >> $HOME/.snowsql/config
          echo "dbname = ${SNOWFLAKE_DATABASE}" >> $HOME/.snowsql/config
          echo "warehouse = ${SNOWFLAKE_WAREHOUSE}" >> $HOME/.snowsql/config
          echo "schemaname = ${SNOWFLAKE_SCHEMA}" >> $HOME/.snowsql/config
     # Upload CSV files to Snowflake stage
      - name: Upload CSV files
        env:
          SNOWFLAKE_STAGE: ${{ secrets.SNOWFLAKE_STAGE }}
        run: |
          ~/snowflake/snowsql -c default -q "PUT file://./ado-asg2-automation-pipeline/csv_files/*.csv @${SNOWFLAKE_STAGE}"
          
      # Load CSV files into tables
      - name: Load CSV files into Snowflake tables
        run: |
          ~/snowflake/snowsql -c default -q "COPY INTO country FROM @${SNOWFLAKE_STAGE}/country.csv FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1)"
          ~/snowflake/snowsql -c default -q "COPY INTO customers FROM @${SNOWFLAKE_STAGE}/customers.csv FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1)"
          ~/snowflake/snowsql -c default -q "COPY INTO facebook_ads FROM @${SNOWFLAKE_STAGE}/facebook_ads.csv FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1)"
          # Repeat for all your tables
