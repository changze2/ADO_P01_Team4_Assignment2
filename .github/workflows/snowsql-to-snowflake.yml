name: Snowflake CSV Upload & Load

on:
  push:
    branches:
      - main  # Trigger when pushing to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch
  schedule:
    - cron: "0 1 * * *"  # Scheduled to run at 1 AM Singapore Time every day

jobs:
  upload-and-load:
    runs-on: ubuntu-22.04  # Use Ubuntu-based runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Install SnowSQL
      - name: Download and install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
          echo "export PATH=\$PATH:~/snowflake/snowsql" >> ~/.profile
          source ~/.profile
          if ! command -v snowsql &> /dev/null; then
            echo "SnowSQL installation failed!"
            exit 1
          fi
          echo "SnowSQL installed successfully."

      # Step 3: Test SnowSQL installation
      - name: Test SnowSQL installation
        run: |
          source ~/.profile
          snowsql -v

      # Step 4: Set up Snowflake credentials
      - name: Set up Snowflake credentials
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          echo "[connections.default]" > $HOME/.snowsql/config
          echo "accountname = ${SNOWFLAKE_ACCOUNT}" >> $HOME/.snowsql/config
          echo "username = ${SNOWFLAKE_USER}" >> $HOME/.snowsql/config
          echo "password = ${SNOWFLAKE_PASSWORD}" >> $HOME/.snowsql/config
          echo "dbname = ${SNOWFLAKE_DATABASE}" >> $HOME/.snowsql/config
          echo "warehouse = ${SNOWFLAKE_WAREHOUSE}" >> $HOME/.snowsql/config
          echo "schemaname = ${SNOWFLAKE_SCHEMA}" >> $HOME/.snowsql/config

      # Step 5: Debug Environment Variables
      - name: Debug Environment Variables
        run: |
          echo "SNOWFLAKE_ACCOUNT = ${SNOWFLAKE_ACCOUNT}"
          echo "SNOWFLAKE_DATABASE = ${SNOWFLAKE_DATABASE}"
          echo "SNOWFLAKE_WAREHOUSE = ${SNOWFLAKE_WAREHOUSE}"
          echo "SNOWFLAKE_SCHEMA = ${SNOWFLAKE_SCHEMA}"

      # Step 6: List files in the repository to check paths
      - name: List files in the repository
        run: ls -alh ./csv_files

      # Step 7: Upload CSV files to Snowflake Stage
      - name: Upload CSV files to Snowflake Stage
        env:
          SNOWFLAKE_STAGE: ${{ secrets.SNOWFLAKE_STAGE }}
        run: |
          # Check if files exist in the 'csv_files' folder before uploading
          if [ -d "./csv_files" ]; then
            echo "Found csv_files directory, proceeding with upload"
            # Check for .csv files inside the directory
            if ls ./csv_files/*.csv 1> /dev/null 2>&1; then
              ~/snowflake/snowsql -c default -q "PUT file://./csv_files/*.csv @${SNOWFLAKE_DATABASE}.${SNOWFLAKE_SCHEMA}.${SNOWFLAKE_STAGE} AUTO_COMPRESS = TRUE"
            else
              echo "No .csv files found in the directory. Aborting upload."
              exit 1
            fi
          else
            echo "No 'csv_files' directory found. Aborting upload."
            exit 1
          fi

      # Step 8: List files in Snowflake stage
      - name: List files in Snowflake stage
        run: |
          ~/snowflake/snowsql -c default -q "LIST @${SNOWFLAKE_DATABASE}.${SNOWFLAKE_SCHEMA}.${SNOWFLAKE_STAGE};"

      # Step 9: Load CSV files into Snowflake tables
      - name: Load CSV files into Snowflake tables
        run: |
          for file in ./csv_files/*.csv; do
            table_name=$(basename "$file" .csv)
            echo "Loading $file into $table_name"
            ~/snowflake/snowsql -c default -q "COPY INTO ${SNOWFLAKE_DATABASE}.${SNOWFLAKE_SCHEMA}.${table_name} FROM @$SNOWFLAKE_DATABASE.${SNOWFLAKE_SCHEMA}.${SNOWFLAKE_STAGE}/$(basename "$file") FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1 COMPRESSION = 'GZIP')"
          done

      # Step 10: Verify loading status (optional)
      - name: Verify the load status
        run: |
          ~/snowflake/snowsql -c default -q "SELECT COUNT(*) FROM ${SNOWFLAKE_DATABASE}.${SNOWFLAKE_SCHEMA}.circuits;"
          ~/snowflake/snowsql -c default -q "SELECT COUNT(*) FROM ${SNOWFLAKE_DATABASE}.${SNOWFLAKE_SCHEMA}.constructor_results;"
          ~/snowflake/snowsql -c default -q "SELECT COUNT(*) FROM ${SNOWFLAKE_DATABASE}.${SNOWFLAKE_SCHEMA}.constructors;"
